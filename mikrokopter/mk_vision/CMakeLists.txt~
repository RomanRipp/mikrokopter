cmake_minimum_required(VERSION 2.4.6)
include($ENV{ROS_ROOT}/core/rosbuild/rosbuild.cmake)

# Set the build type.  Options are:
#  Coverage       : w/ debug symbols, w/o optimization, w/ code-coverage
#  Debug          : w/ debug symbols, w/o optimization
#  Release        : w/o debug symbols, w/ optimization
#  RelWithDebInfo : w/ debug symbols, w/ optimization
#  MinSizeRel     : w/o debug symbols, w/ optimization, stripped binaries
#set(ROS_BUILD_TYPE RelWithDebInfo)
set(ROS_BUILD_TYPE Debug)

rosbuild_init()

#set the default path for built executables to the "bin" directory
set(EXECUTABLE_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/bin)
#set the default path for built libraries to the "lib" directory
set(LIBRARY_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/lib)

rosbuild_genmsg()

#find_package(OpenCV)
include_directories('/usr')
link_directories('/usr')
#include_directories(${OpenCV_INCLUDE_DIRS})
#rosbuild_add_executable(vision src/vision.cpp)
#target_link_libraries(vision ${OpenCV_LIBS})

set(ARPOSESINGLE       vision)
set(ARPOSESINGLE_SRC   src/vision.cpp)
set(ARPOSESINGLE_LIBS  GLU GL glut ARgsub AR ARMulti ARvideo)

rosbuild_add_executable(${ARPOSESINGLE}  ${ARPOSESINGLE_SRC})
target_link_libraries(${ARPOSESINGLE}  ${ARPOSESINGLE_LIBS})

