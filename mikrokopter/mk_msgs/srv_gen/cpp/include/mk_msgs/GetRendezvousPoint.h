/* Auto-generated by genmsg_cpp for file /home/loki/Documents/ros_workspace/mikrokopter/mk_msgs/srv/GetRendezvousPoint.srv */
#ifndef MK_MSGS_SERVICE_GETRENDEZVOUSPOINT_H
#define MK_MSGS_SERVICE_GETRENDEZVOUSPOINT_H
#include <string>
#include <vector>
#include <map>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/time.h"

#include "ros/macros.h"

#include "ros/assert.h"

#include "ros/service_traits.h"




namespace mk_msgs
{
template <class ContainerAllocator>
struct GetRendezvousPointRequest_ {
  typedef GetRendezvousPointRequest_<ContainerAllocator> Type;

  GetRendezvousPointRequest_()
  : currLatitude(0.0)
  , currLongitude(0.0)
  {
  }

  GetRendezvousPointRequest_(const ContainerAllocator& _alloc)
  : currLatitude(0.0)
  , currLongitude(0.0)
  {
  }

  typedef float _currLatitude_type;
  float currLatitude;

  typedef float _currLongitude_type;
  float currLongitude;


  typedef boost::shared_ptr< ::mk_msgs::GetRendezvousPointRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::mk_msgs::GetRendezvousPointRequest_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct GetRendezvousPointRequest
typedef  ::mk_msgs::GetRendezvousPointRequest_<std::allocator<void> > GetRendezvousPointRequest;

typedef boost::shared_ptr< ::mk_msgs::GetRendezvousPointRequest> GetRendezvousPointRequestPtr;
typedef boost::shared_ptr< ::mk_msgs::GetRendezvousPointRequest const> GetRendezvousPointRequestConstPtr;


template <class ContainerAllocator>
struct GetRendezvousPointResponse_ {
  typedef GetRendezvousPointResponse_<ContainerAllocator> Type;

  GetRendezvousPointResponse_()
  : ack(0)
  , rendezLatitude(0.0)
  , rendezLongitude(0.0)
  {
  }

  GetRendezvousPointResponse_(const ContainerAllocator& _alloc)
  : ack(0)
  , rendezLatitude(0.0)
  , rendezLongitude(0.0)
  {
  }

  typedef int16_t _ack_type;
  int16_t ack;

  typedef float _rendezLatitude_type;
  float rendezLatitude;

  typedef float _rendezLongitude_type;
  float rendezLongitude;


  typedef boost::shared_ptr< ::mk_msgs::GetRendezvousPointResponse_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::mk_msgs::GetRendezvousPointResponse_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct GetRendezvousPointResponse
typedef  ::mk_msgs::GetRendezvousPointResponse_<std::allocator<void> > GetRendezvousPointResponse;

typedef boost::shared_ptr< ::mk_msgs::GetRendezvousPointResponse> GetRendezvousPointResponsePtr;
typedef boost::shared_ptr< ::mk_msgs::GetRendezvousPointResponse const> GetRendezvousPointResponseConstPtr;

struct GetRendezvousPoint
{

typedef GetRendezvousPointRequest Request;
typedef GetRendezvousPointResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;
}; // struct GetRendezvousPoint
} // namespace mk_msgs

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::mk_msgs::GetRendezvousPointRequest_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::mk_msgs::GetRendezvousPointRequest_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::mk_msgs::GetRendezvousPointRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "47ee336267def9acd9c52f97182bd954";
  }

  static const char* value(const  ::mk_msgs::GetRendezvousPointRequest_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x47ee336267def9acULL;
  static const uint64_t static_value2 = 0xd9c52f97182bd954ULL;
};

template<class ContainerAllocator>
struct DataType< ::mk_msgs::GetRendezvousPointRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "mk_msgs/GetRendezvousPointRequest";
  }

  static const char* value(const  ::mk_msgs::GetRendezvousPointRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::mk_msgs::GetRendezvousPointRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "\n\
\n\
\n\
float32 currLatitude\n\
float32 currLongitude\n\
\n\
";
  }

  static const char* value(const  ::mk_msgs::GetRendezvousPointRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::mk_msgs::GetRendezvousPointRequest_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros


namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::mk_msgs::GetRendezvousPointResponse_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::mk_msgs::GetRendezvousPointResponse_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::mk_msgs::GetRendezvousPointResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "94963735645ca33001d5b162101e4c1c";
  }

  static const char* value(const  ::mk_msgs::GetRendezvousPointResponse_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x94963735645ca330ULL;
  static const uint64_t static_value2 = 0x01d5b162101e4c1cULL;
};

template<class ContainerAllocator>
struct DataType< ::mk_msgs::GetRendezvousPointResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "mk_msgs/GetRendezvousPointResponse";
  }

  static const char* value(const  ::mk_msgs::GetRendezvousPointResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::mk_msgs::GetRendezvousPointResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "\n\
\n\
\n\
int16 ack\n\
float32 rendezLatitude\n\
float32 rendezLongitude\n\
\n\
\n\
";
  }

  static const char* value(const  ::mk_msgs::GetRendezvousPointResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::mk_msgs::GetRendezvousPointResponse_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::mk_msgs::GetRendezvousPointRequest_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.currLatitude);
    stream.next(m.currLongitude);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct GetRendezvousPointRequest_
} // namespace serialization
} // namespace ros


namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::mk_msgs::GetRendezvousPointResponse_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.ack);
    stream.next(m.rendezLatitude);
    stream.next(m.rendezLongitude);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct GetRendezvousPointResponse_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace service_traits
{
template<>
struct MD5Sum<mk_msgs::GetRendezvousPoint> {
  static const char* value() 
  {
    return "60fb96562d024b790f9c37a37ae940f9";
  }

  static const char* value(const mk_msgs::GetRendezvousPoint&) { return value(); } 
};

template<>
struct DataType<mk_msgs::GetRendezvousPoint> {
  static const char* value() 
  {
    return "mk_msgs/GetRendezvousPoint";
  }

  static const char* value(const mk_msgs::GetRendezvousPoint&) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<mk_msgs::GetRendezvousPointRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "60fb96562d024b790f9c37a37ae940f9";
  }

  static const char* value(const mk_msgs::GetRendezvousPointRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<mk_msgs::GetRendezvousPointRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "mk_msgs/GetRendezvousPoint";
  }

  static const char* value(const mk_msgs::GetRendezvousPointRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<mk_msgs::GetRendezvousPointResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "60fb96562d024b790f9c37a37ae940f9";
  }

  static const char* value(const mk_msgs::GetRendezvousPointResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<mk_msgs::GetRendezvousPointResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "mk_msgs/GetRendezvousPoint";
  }

  static const char* value(const mk_msgs::GetRendezvousPointResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace service_traits
} // namespace ros

#endif // MK_MSGS_SERVICE_GETRENDEZVOUSPOINT_H

